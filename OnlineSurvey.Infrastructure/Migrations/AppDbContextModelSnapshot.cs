// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OnlineSurvey.Infrastructure;

#nullable disable

namespace OnlineSurvey.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OnlineSurvey.Domian.Entities.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("QuestionId")
                        .HasColumnType("integer");

                    b.Property<string[]>("Replys")
                        .IsRequired()
                        .HasColumnType("text[]")
                        .HasColumnName("Replys");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId")
                        .IsUnique();

                    b.ToTable("Answers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            QuestionId = 1,
                            Replys = new[] { "Детектив", "Фантастика", "Ужасы", "Драма", "Комедия", "Боевик" }
                        },
                        new
                        {
                            Id = 2,
                            QuestionId = 2,
                            Replys = new[] { "Леонардо Ди Каприо", "Бред Пит", "Том Круз", "Аль Пачино", "Скот Аткинс" }
                        },
                        new
                        {
                            Id = 3,
                            QuestionId = 3,
                            Replys = new[] { "Утром", "Днём", "Вечером" }
                        },
                        new
                        {
                            Id = 4,
                            QuestionId = 4,
                            Replys = new[] { "Плохое", "Хорошее", "Отличное" }
                        },
                        new
                        {
                            Id = 5,
                            QuestionId = 5,
                            Replys = new[] { "Да", "Нет", "Частично" }
                        },
                        new
                        {
                            Id = 6,
                            QuestionId = 6,
                            Replys = new[] { "1", "2", "3", "4", "5" }
                        });
                });

            modelBuilder.Entity("OnlineSurvey.Domian.Entities.Interview", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Interview", (string)null);
                });

            modelBuilder.Entity("OnlineSurvey.Domian.Entities.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Quaere")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Quaere");

                    b.Property<int>("SurveyId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("SurveyId");

                    b.ToTable("Questions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Quaere = "Ваш любимый жанр",
                            SurveyId = 1
                        },
                        new
                        {
                            Id = 2,
                            Quaere = "Выбирите двух актёров, которые вам симпатизируют из этого списка",
                            SurveyId = 1
                        },
                        new
                        {
                            Id = 3,
                            Quaere = "В какое время суток вы смотрите фильм",
                            SurveyId = 1
                        },
                        new
                        {
                            Id = 4,
                            Quaere = "Качество обслуживания",
                            SurveyId = 2
                        },
                        new
                        {
                            Id = 5,
                            Quaere = "Решил ли он вашь вопрос",
                            SurveyId = 2
                        },
                        new
                        {
                            Id = 6,
                            Quaere = "Оценка работы сотрудника",
                            SurveyId = 2
                        });
                });

            modelBuilder.Entity("OnlineSurvey.Domian.Entities.Result", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("InterviewId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Results")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InterviewId");

                    b.ToTable("Results", (string)null);
                });

            modelBuilder.Entity("OnlineSurvey.Domian.Entities.Survey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Discription");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Surveys", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Discription = "Анонимный опрос для статистики ",
                            Name = "Фильмы"
                        },
                        new
                        {
                            Id = 2,
                            Discription = "Анонимный опрос для улучшение качества ",
                            Name = "Оценка качества работы сотрудника"
                        });
                });

            modelBuilder.Entity("OnlineSurvey.Domian.Entities.Answer", b =>
                {
                    b.HasOne("OnlineSurvey.Domian.Entities.Question", "Question")
                        .WithOne("Answer")
                        .HasForeignKey("OnlineSurvey.Domian.Entities.Answer", "QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("OnlineSurvey.Domian.Entities.Question", b =>
                {
                    b.HasOne("OnlineSurvey.Domian.Entities.Survey", "Survey")
                        .WithMany("Questions")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("OnlineSurvey.Domian.Entities.Result", b =>
                {
                    b.HasOne("OnlineSurvey.Domian.Entities.Interview", "Interview")
                        .WithMany("Results")
                        .HasForeignKey("InterviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interview");
                });

            modelBuilder.Entity("OnlineSurvey.Domian.Entities.Interview", b =>
                {
                    b.Navigation("Results");
                });

            modelBuilder.Entity("OnlineSurvey.Domian.Entities.Question", b =>
                {
                    b.Navigation("Answer")
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineSurvey.Domian.Entities.Survey", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
